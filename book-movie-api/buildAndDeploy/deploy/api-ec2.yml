AWSTemplateFormatVersion: "2010-09-09"
Description: Creates the API EC2 instance. This assumes a default VPC present with public subnets.

Parameters:
  securityKeyName:
    Type: String
    Description: The SSH key name
  tagName:
    Type: String
    Description: The training session name such as bootcamp-feb-2018 or extended-paatshala-march-2018
  commitHashOfDeployable:
    Type: String
    Description: The commit hash of the deployable

Mappings:
  regionMap:
      "us-east-1": 
        AMI: "ami-97785bed"
      "us-east-2": 
        AMI: "ami-f63b1193"
      "us-west-2": 
        AMI: "ami-f2d3638a"
      "us-west-1": 
        AMI: "ami-824c4ee2"
      "ap-southeast-1": 
        AMI: "ami-68097514"
      "ap-southeast-2": 
        AMI: "ami-942dd1f6"
      "ap-south-1": 
        AMI: "ami-531a4c3c"
      "cn-north-1": 
        AMI: "ami-cb19c4a6"


Resources:
  EC2:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref securityKeyName
      ImageId: !FindInMap [regionMap, !Ref "AWS::Region", AMI]
      InstanceType: t2.small
      SecurityGroups:
        - Fn::ImportValue:
            !Join [ "-", [ "SecurityGroup-API", Ref: tagName ] ]
      UserData:
        Fn::Base64:                               
          !Sub |
              #!/bin/bash -ex
              yum update -y
              yum install -y docker
              usermod -a -G docker ec2-user
              curl -L https://github.com/docker/compose/releases/download/1.20.1/docker-compose-`uname -s`-`uname -m` | sudo tee /usr/local/bin/docker-compose > /dev/null
              chmod +x /usr/local/bin/docker-compose
              service docker start
              chkconfig docker on
              su - ec2-user
              cd /home/ec2-user
              mkdir -p app
              cd app
              wget https://s3.amazonaws.com/build-artefacts-${tagName}/bootcamp-just-cinemas-api-${commitHashOfDeployable}.tar
              tar -xzvf bootcamp-just-cinemas-api-${commitHashOfDeployable}.tar
              /usr/local/bin/docker-compose up --build -d

      Tags:
        - Key: Team
          Value: !Ref tagName     
  EBS:
    Type: AWS::EC2::Volume
    Properties:
      Size: 8
      AvailabilityZone: !GetAtt EC2.AvailabilityZone

  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      InstanceId: !Ref EC2
      VolumeId: !Ref EBS
      Device: /dev/sdh

  IPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: !Ref EC2
      EIP:
        Fn::ImportValue:
          !Join [ "-", [ "API-Box-IP", Ref: tagName ] ]
